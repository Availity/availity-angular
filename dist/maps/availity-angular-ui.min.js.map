{"version":3,"sources":["/source/index.js","/source/template.js","/source/modal.js","/source/form.js","/source/field.js","/source/popover.js","/source/tooltip.js","/source/container.js","/source/adapter-bootstrap.js","/source/adapter.js","/source/dropdown.js","/source/datepicker.js","/source/idle-notifier.js","/source/mask.js","/source/has-permission.js","/source/analytics.js","/source/placeholder.js","/source/breadcrumbs.js","/source/breadcrumbs-spaces.js","/source/approximate.js","/source/accordion.js","/source/badge.js","/source/removable-label.js","/source/loader.js","/source/block.js","/source/block-directive.js","/source/tabs.js","/source/scroll-pagination.js","/source/dimmer.js"],"names":["root","availity","MODULE_UI","ui","angular","module","constant","NG_OPTIONS","exports","window","factory","$q","$templateCache","$http","get","options","valid","template","templateUrl","Error","when","cache","then","result","data","OPTIONS","scope","controller","controllerAs","locals","id","container","keyboard","backdrop","show","remote","EVENTS","SHOW","SHOWN","HIDE","HIDDEN","NAMESPACE","MODAL","BS_EVENTS","TEMPLATES","AvModalManager","this","instances","proto","prototype","add","push","remove","_","without","closeAll","forEach","$el","$","bsModal","removeBackdrop","$body","removeClass","resetAdjustments","resetScrollbar","avModal","destroy","ModalFactory","$rootScope","$timeout","$compile","$controller","$log","AV_MODAL","avTemplateCache","avModalManager","Modal","self","templateDefer","defer","templatePromise","promise","_buildOptions","_build","create","userOptions","extend","$new","$scope","warn","$element","element","_createId","_scope","_init","appendTo","resolve","modal","_listeners","isUndefined","modalShow","modalToggle","toggle","modalHide","hide","animationShowDefer","animationHideDefer","on","event","$emit","isFunction","onShown","onHidden","call","$evalAsync","$on","_id","isShown","attr","uuid","directive","restrict","replace","transclude","size","ngForm","rulesKey","avValOn","avValDebounce","avValInvalid","violations","init","form","record","count","violocationCount","reduce","sum","num","$setValidity","unrecord","reset","$setPristine","$submitted","$setSubmitted","setRulesKey","key","$parse","AV_VAL","avValAdapter","priority","require","compile","pre","iEl","iAttrs","controllers","ruleFn","avValForm","error","$watch","_rulesKey","_oldRulesKey","avForm","info","$broadcast","REVALIDATE","post","fn","ngSubmit","off","ngClick","RESET","bind","SUBMITTED","$invalid","FAILED","preventDefault","stopImmediatePropagation","scroll","callback","$event","$apply","$attrs","avVal","$sniffer","ngModel","rule","placeholder","noEvent","createId","avId","setNgModel","setRule","updateModel","results","validationKeys","avResults","contraintName","isValid","avViolations","length","$error","value","indexOf","lastIndexOf","updateView","$dirty","avValShow","message","validate","validateModel","validateView","undefined","onDebounce","val","trim","isCheckbox","$setViewValue","checked","isRadio","is","type","splice","unbind","debounce","msie","cancel","link","attrs","avValField","parseInt","DEBOUNCE","isNumber","debounceAllowed","$parsers","$formatters","unshift","$viewValue","provider","config","showOnLoadHideDelay","set","$get","copy","NAME","AV_POPOVER","avPopoverConfig","listeners","name","ev","plugin","popover","showOnLoad","delay","avPopover","html","AV_TOOLTIP","avTooltipConfig","tooltip","avTooltip","messages","CLASSES","SUCCESS","WARNING","ERROR","FEEDBACK","HELP","FORM_GROUP","NAVBAR","SELECTORS","CONTAINER","DATA_CONTAINER","CONTROLLER","AV_BOOTSTRAP_ADAPTER","$valid","parents","addClass","selector","join","target","siblings","el","avValModel","navbarSelector","offset","each","outerHeight","$target","find","animate","scrollTop","top","DEFAULT","that","setAdapter","adapter","AV_VAL_ADAPTER","$injector","Adapter","adapterName","closeOnResize","dropdownAutoWidth","minimumResultsForSearch","AV_UI","AV_DROPDOWN","avDropdownConfig","match","contains","$eval","isRemoteMultiple","multiple","isDefined","query","queryFn","getId","tagName","toLowerCase","setRemoteViewValue","e","values","isArray","isObject","added","index","findIndex","matches","removed","setViewValue","getSelected","model","collection","items","item","valueFn","equals","valueName","response","more","setValue","viewValue","selected","select2","getMultiSelected","indices","savedObject","temp","inputViewValues","$modelValue","correlationId","setValues","isEmpty","ngOptions","displayFn","keyName","$watchCollection","newVal","oldVal","$window","avDropdown","parent","prev","toggleClass","$pristine","ngFocus","ngBlur","classNames","className","split","i","_$render","$render","win","$observe","eventListeners","listener","eventId","autoclose","todayHighlight","format","forceParse","ADD_ON_SELECTOR","DEFAULTS","MODELFORMAT","AV_DATEPICKER","avDatepickerConfig","setDate","findModel","$input","andSelf","modelToView","isoWrap","datepicker","DPGlobal","formatDate","wrapIsoDate","date","m","moment","toDate","viewToModel","parseFormat","utcDate","parseDate","localDate","_utc_to_local","modelFormat","avDatepicker","prop","focus","OK","BASE","SESSION","sessionTemplate","warningTemplate","setSessionTemplate","setWarningTemplate","AV_IDLE","AV_UI_IDLE","AvModal","$document","AvIdleNotifier","idle","initListeners","IDLE_ACTIVE","showWarning","IDLE_INACTIVE","hideWarning","SESSION_TIMEOUT_ACTIVE","showSession","destroyListeners","disableBackDrop","onSessionTimeout","SESSION_TIMEOUT_REDIRECT","run","avIdleNotifier","phone","SSN","AV_MASK","maskType","inputmask","onSuccess","isAuthorized","onError","avUserAuthorizations","$attr","avHasPermission","permissions","words","isAnyAuthorized","getOptions","avAnalyticsUtils","avAnalytics","onEvent","properties","level","label","text","isExternalLink","stopPropagation","trackEvent","document","location","AV_ANALYTICS","childCtrl","parentCtrl","parentOptions","eventType","avAnalyticsOn","getProperties","requires","$provide","decorator","$delegate","originalLink","newLink","keys","apply","arguments","TEMPLATE","AvBreadcrumbsController","$state","getBreadcrumb","breadcrumbs","state","breadcrumb","parentState","getBreadcrumbs","current","$inject","avBreadcrumbs","AV_BREADCRUMBS","$location","avSpacesResource","pageName","spaceId","search","spaceName","filter","pow","Math","floor","abs","log","round","number","precision","prec","base","unit","GROUP","AvAccordionController","groups","addGroup","groupScope","removeGroup","group","avAccordion","AV_ACCORDION","avAccordionGroup","heading","popOverContent","popOverContentHeader","isOpen","initOpen","isDisabled","accordionCtrl","openClass","panelClass","toggleOpen","which","$id","random","headingId","panelId","avCollapse","$transition","initialAnimSkip","currentTransition","doTransition","change","newTransition","newTransitionDone","expandDone","css","height","expand","scrollHeight","collapseDone","collapse","shouldCollapse","trigger","deferred","endEventName","animation","transitionEndHandler","isString","reject","transElement","createElement","transitionEndEventNames","WebkitTransition","MozTransition","OTransition","transition","animationEndEventNames","styleEvent","findEndEventName","endEventNames","nameIndex","style","transitionEndEventName","animationEndEventName","COLOR","DEFAULT_CLASS","SHOW_WHEN_ZERO","badgeDirective","AV_BADGE","color","showWhenZero","classes","AV_REMOVABLE_LABEL","removeValue","onRemove","removeLabel","disabled","LOADER","active","start","velocity","stagger","opacity","duration","complete","setTimeout","endAnimation","removeData","stop","AV_LOADER","avLoader","BLOCK","getLoaderController","blockId","triggerLoaderController","instance","loaderController","triggerInstance","origFn","loaderFn","modifyBlockInstances","origStartFn","origStopFn","startLoader","avModifications","AV_BLOCK","blockUIConfig","blockUI","autoBlock","origGetFn","avBlockUi","blockCount","TABS","TAB","TabsController","tabs","addTab","tab","selectTab","removeTab","newActiveIndex","selectedTab","onDeselect","onSelect","TabsDirective","AV_TABS","justified","tabType","vertical","padContent","TabDirective","tabsController","transcludeFn","select","$parent","disable","TabPaneDirective","avTabPane","append","contents","node","DEFAULT_OPTIONS","limit","maxCached","loadMoreText","entryIdAttribute","apiParams","beforePageLoad","afterPageLoad","AvScrollPaginationService","registerInstance","instanceInterface","unregisterInstance","resetInstance","AV_SCROLL_PAGINATION","avScrollPaginationService","buildOptions","_options","lowOffset","highOffset","originalEntries","entries","updateButtonVisibilityFlags","showNext","totalCount","showPrev","disableVisibilityFlags","loadEntries","prepend","block","avScrollPagination","params","apiResource","responseData","getResponseData","resourceId","addEntries","responseKey","nestedData","noData","oldEntries","diff","trackedElementId","slice","autoscroll","trackedElement","trackedElementTop","newScrollTop","loadPrev","loadNext","animationConfig","showAnimation","showEvent","hideAnimation","hideEvent","overlaySelector","avDimmerConfig","elm"],"mappings":"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","file":"availity-angular-ui.min.js","sourcesContent":["/*global module*/\n\n(function(root) {\n\n  'use strict';\n\n  var availity = root.availity || {};\n\n  availity.MODULE_UI = 'availity.ui';\n  availity.ui = angular.module(availity.MODULE_UI, ['ng', 'ngSanitize']);\n\n  availity.ui.constant('AV_UI', {\n    // jscs: disable\n    NG_OPTIONS: /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/\n    // jscs: enable\n  });\n\n  if(typeof module !== 'undefined' && module.exports) {\n    module.exports = availity;\n  }\n\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.factory('avTemplateCache', function($q, $templateCache, $http) {\n\n    return {\n\n      get: function(options) {\n\n        var valid = !options.template || !options.templateUrl;\n\n        if(!valid) {\n          throw new Error('Either options.template or options.templateUrl must be defined for avTemplateCache');\n        }\n\n        return options.template ? $q.when(options.template) :\n          $http.get(options.templateUrl, {cache: $templateCache})\n            .then(function(result) {\n              return result.data;\n            });\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_MODAL', {\n\n    OPTIONS: {\n      scope: null,\n      controller: null,\n      controllerAs: null,\n      locals: null,\n      templateUrl: null,\n      template: null,\n      id: null,\n      container: null,\n\n      // Bootstrap defaults\n      keyboard: true,\n      backdrop: true,\n      show: false,\n      remote: false\n    },\n\n    EVENTS: {\n      SHOW: 'show.av.modal',\n      SHOWN: 'shown.av.modal',\n      HIDE: 'hide.av.modal',\n      HIDDEN: 'hidden.av.modal'\n    },\n\n    NAMESPACE: {\n      MODAL: 'bs.modal'\n    },\n\n    BS_EVENTS:  {\n      SHOW: 'show.bs.modal',\n      SHOWN: 'shown.bs.modal',\n      HIDE: 'hide.bs.modal',\n      HIDDEN: 'hidden.bs.modal'\n    },\n\n    TEMPLATES: {\n      MODAL: 'ui/modal/modal-tpl.html'\n    }\n  });\n\n  availity.ui.factory('avModalManager', function() {\n\n    var AvModalManager = function() {\n      this.instances = [];\n    };\n\n    var proto = AvModalManager.prototype;\n\n    proto.add = function(id) {\n      this.instances.push(id);\n    };\n\n    proto.remove = function(id) {\n      this.instances = _.without(this.instances, id);\n    };\n\n    proto.closeAll = function() {\n\n      _.forEach(this.instances, function(id) {\n\n        var $el = $('#' + id);\n\n        if(!$el) {\n          return;\n        }\n\n        var bsModal = $el.data('bs.modal');\n        if(bsModal) {\n          bsModal.removeBackdrop();\n          bsModal.$body.removeClass('modal-open');\n          bsModal.resetAdjustments();\n          bsModal.resetScrollbar();\n        }\n\n        var avModal = $el.data('AvModal');\n        if(avModal) {\n          avModal.destroy();\n        }\n\n      });\n    };\n\n    return new AvModalManager();\n\n  });\n\n  var ModalFactory = function($rootScope, $timeout, $compile, $controller, $log, AV_MODAL, avTemplateCache, $q, avModalManager) {\n\n    var Modal = function(options) {\n\n      var self = this;\n\n      this.templateDefer = $q.defer();\n      this.templatePromise = this.templateDefer.promise;\n\n      this.options = this._buildOptions(options);\n\n      avTemplateCache.get(options).then(function(template) {\n        self.options.template = template;\n        self._build();\n      });\n\n    };\n\n    Modal.create = function(options) {\n      return new Modal(options);\n    };\n\n    var proto = Modal.prototype;\n\n    proto._buildOptions = function (userOptions) {\n      var options = angular.extend({}, AV_MODAL.OPTIONS, userOptions);\n\n      if (!options.scope) {\n        options.scope = $rootScope.$new();\n      }\n\n      if (options.controller) {\n        var locals = angular.extend({ $scope: options.scope }, options.locals);\n\n        var controller = $controller(options.controller, locals);\n\n        if (options.controllerAs) {\n          if (options.scope[options.controllerAs]) {\n            $log.warn('Overwriting ' + options.controllerAs + 'on scope with AvModal controllerAs, consider passing in no scope, or specifying a different controllerAs than the existing controller');\n          }\n          options.scope[options.controllerAs] = controller;\n        }\n      }\n\n      return options;\n    };\n\n    proto._build = function() {\n\n      var self = this;\n\n      var scope = this.options.scope;\n      this.$element = angular.element(this.options.template);\n\n      this._createId();\n\n      this._scope();\n\n      $compile(this.$element)(scope);\n\n      $timeout(function() {\n        self._init();\n      }, 0, true);\n\n      // Append to container or <body>\n      this.options.container ? this.$element.appendTo(this.options.container) : this.$element.appendTo('body');\n\n    };\n\n    proto._init = function() {\n\n      this.$element.data('AvModal', this);\n\n      this.templateDefer.resolve(true);\n\n      // Initialize Bootstrap jQuery plugin\n      this.$element.modal({\n        'backdrop': this.options.backdrop,\n        'keyboard': this.options.keyboard,\n        'show': false,\n        'remote': this.options.remote\n      });\n\n      this._listeners();\n\n      if (_.isUndefined(this.options.show) || this.options.show) {\n        this.$element.modal('show');\n      }\n    };\n\n    // Add helpers to scope so clients can call internal methods\n    proto._scope = function() {\n\n      var self = this;\n      var scope = this.options.scope;\n\n      scope.modalShow = function() {\n        return self.show();\n      };\n\n      scope.modalToggle = function() {\n        return self.toggle();\n      };\n\n      scope.modalHide = function() {\n        return self.hide();\n      };\n\n    };\n\n    proto._listeners = function() {\n\n      var self = this;\n      var scope = this.options.scope;\n      var $element = this.$element;\n\n      this.animationShowDefer = $q.defer();\n      this.animationHideDefer = $q.defer();\n\n      $element.on(AV_MODAL.BS_EVENTS.SHOW, function(event) {\n        scope.$emit(AV_MODAL.EVENTS.SHOW, event, self);\n      });\n\n      $element.on(AV_MODAL.BS_EVENTS.SHOWN, function(event) {\n\n        if(angular.isFunction(self.options.onShown)) {\n          self.options.onShown();\n        }\n\n        self.animationShowDefer.resolve(true);\n\n        scope.$emit(AV_MODAL.EVENTS.SHOWN, event, self);\n      });\n\n      $element.on(AV_MODAL.BS_EVENTS.HIDE, function(event) {\n        scope.$emit(AV_MODAL.EVENTS.HIDE, event, self);\n      });\n\n      $element.on(AV_MODAL.BS_EVENTS.HIDDEN, function(event) {\n\n        if(angular.isFunction(self.options.onHidden)) {\n          self.options.onHidden.call(this);\n        }\n\n        self.animationHideDefer.resolve(true);\n        scope.$emit(AV_MODAL.EVENTS.HIDDEN, event, self);\n\n        scope.$evalAsync(function() {\n          self.destroy();\n        });\n\n      });\n\n      // Garbage collection\n      scope.$on('$destroy', function() {\n        avModalManager.remove(self._id);\n        self.destroy();\n      });\n\n    };\n\n    proto.show = function() {\n\n      var self = this;\n      this.animationShowDefer = $q.defer();\n\n      this.templatePromise.then(function() {\n        self.isShown() ? self.animationShowDefer.resolve(true) : self.$element.modal('show');\n      });\n\n      return this.animationShowDefer.promise;\n\n    };\n\n    proto.hide = function() {\n\n      var self = this;\n      this.animationHideDefer = $q.defer();\n\n      this.templatePromise.then(function() {\n        !self.isShown() ? self.animationHideDefer.resolve(true) : self.$element.modal('hide');\n      });\n\n      return this.animationHideDefer.promise;\n    };\n\n    proto.isShown = function() {\n      return this.$element.data(AV_MODAL.NAMESPACE.MODAL).isShown;\n    },\n\n    proto.toggle = function() {\n\n      var self = this;\n\n      return this.templatePromise.then(function() {\n        return self.isShown() ? self.hide() : self.show();\n      });\n\n    };\n\n    proto.destroy = function() {\n\n      var self = this;\n\n      return this.templatePromise.then(function() {\n        self.$element.data('AvModal', null);\n        self.$element.remove();\n      });\n\n    };\n\n    proto._createId = function() {\n      // Create a unique id for the modal if not present or passed in via options\n      var id = this.$element.attr('id');\n      if(!id) {\n        // Get id from options or create a unique id\n        id = this.options.id ? this.options.id : availity.uuid('av-modal-id');\n        this.$element.attr('id', id);\n      }\n\n      this._id = id;\n\n      avModalManager.add(id);\n    };\n\n    return Modal;\n  };\n\n  availity.ui.factory('AvModal', ModalFactory);\n\n  availity.ui.directive('avModal', function(AV_MODAL) {\n    return {\n      restrict: 'A',\n      replace: true,\n      transclude: true,\n      scope: {\n        size: '@'\n      },\n      templateUrl: AV_MODAL.TEMPLATES.MODAL\n    };\n  });\n\n})(window);\n","/**\n * 1. All fields should be pristine on first load\n * 2. If field is modified an invalid the field should be marked with an error\n *\n */\n(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.controller('avValFormController', function() {\n\n    this.ngForm  = null;\n    this.rulesKey = null;\n    this.avValOn = null;\n    this.avValDebounce = null;\n    this.avValInvalid = false;\n\n    // Object that stores the unique id (key) and violation count (value) of all the form fields\n    //\n    // EX:\n    //\n    // {\n    //  avVal001: 0\n    //  avVal002: 2\n    //  avVal003: 1\n    // }\n    this.violations = {};\n\n    this.init = function(form) {\n      this.ngForm = form;\n    };\n\n    /**\n     * Records id of the form field and number of violations\n     * @param  {[type]} id    [description]\n     * @param  {[type]} count [description]\n     * @return {[type]}       [description]\n     */\n    this.record = function(id, count) {\n      this.violations[id] = count;\n\n      var violocationCount = _.reduce(this.violations, function(sum, num) {\n        return sum + num;\n      }, 0);\n\n      this.ngForm.$setValidity('av', violocationCount === 0);\n    };\n\n    this.unrecord = function(id) {\n      if(id && this.violations[id]) {\n        delete this.violations[id];\n      }\n    };\n\n    this.reset = function() {\n      this.ngForm.$setPristine();\n      this.ngForm.$submitted = false;\n    };\n\n    this.$setSubmitted = function() {\n      this.ngForm.$submitted = true;\n    };\n\n    this.setRulesKey = function(key) {\n      this.rulesKey = key;\n    };\n\n  });\n\n  // form.$error = {};\n  // form.$$success = {};\n  // form.$pending = undefined;\n  // form.$name = $interpolate(attrs.name || attrs.ngForm || '')($scope);\n  // form.$dirty = false;\n  // form.$pristine = true;\n  // form.$valid = true;\n  // form.$invalid = false;\n  // form.$submitted = false;\n\n  availity.ui.directive('avValForm', function($log, $timeout, $parse, AV_VAL, avValAdapter, $rootScope) {\n    return {\n      restrict: 'A',\n      priority: 10,\n      require: ['form', 'avValForm'],\n      controller: 'avValFormController',\n      compile: function() {\n        return {\n          pre: function(scope, iEl, iAttrs, controllers) {\n\n            var ruleFn = $parse(iAttrs.avValForm);\n            var rulesKey = ruleFn(scope);\n            rulesKey = rulesKey || iAttrs.avValForm; // interpolated rule from scope || fixed string\n\n            if(!rulesKey) {\n              $log.error('avValForm requires a rules key in order to run the proper validation rules.');\n              return;\n            }\n\n            scope.$watch(ruleFn, function(_rulesKey, _oldRulesKey) {\n              if(_rulesKey) {\n                avForm.setRulesKey(_rulesKey);\n\n                if(_rulesKey !== _oldRulesKey) {\n                  $timeout(function() {\n                    $log.info('avValForm revalidate');\n                    $rootScope.$broadcast(AV_VAL.EVENTS.REVALIDATE);\n                  });\n                }\n\n              }\n\n            });\n\n            var ngForm = controllers[0];\n            var avForm = controllers[1];\n\n            // Allow form attributes to define the validation behavior of the form fields\n            // inside it.  If `av-val-on` or `av-val-debounce` are on the form then all form\n            // fields inside the form would inherit this behavior.\n            avForm.avValOn = iAttrs.avValOn || null;\n            avForm.avValDebounce = iAttrs.avValDebounce || null;\n            // Allows fields to update with invalid data for dirty form saving\n            avForm.avValInvalid = iAttrs.avValInvalid || false;\n\n            avForm.init(ngForm);\n            avForm.setRulesKey(rulesKey);\n\n          },\n          post: function(scope, iEl, iAttrs, controllers) {\n\n            iEl.attr('novalidate', 'novalidate');  // prevent HTML5 validation from kicking in\n\n            // Disable ng-submit or ng-click handlers and store the function to call for submitting\n            var fn;\n            if(iAttrs.ngSubmit) {\n              // Disable ng-submit event\n              iEl.off('submit');\n              fn = $parse(iAttrs.ngSubmit, /* expensiveChecks */ true);\n            }else if(iAttrs.ngClick) {\n              // Disable ng-click event\n              iEl.off('click');\n              fn = $parse(iAttrs.ngClick, /* expensiveChecks */ true);\n            }\n\n            var ngForm = controllers[0];\n            var avForm = controllers[1];\n\n            scope.$on(AV_VAL.EVENTS.RESET, function () {\n              avForm.reset();\n            });\n\n            iEl.bind('submit', function(event) {\n\n              scope.$broadcast(AV_VAL.EVENTS.SUBMITTED);\n              avForm.$setSubmitted();\n\n              if(ngForm.$invalid) {\n\n                scope.$broadcast(AV_VAL.EVENTS.FAILED);\n\n                $log.info('avValForm invalid.  preventing default submit action');\n\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                scope.$broadcast(event);\n\n                avValAdapter.scroll(iEl);\n                return;\n              }\n\n              ngForm.$setPristine();\n\n              if(!fn) {\n                return;\n              }\n\n              var callback = function() {\n                fn(scope, {$event:event});\n              };\n\n              scope.$apply(callback);\n\n            });\n\n          }\n        };\n      }\n    };\n  });\n\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.controller('AvValFieldController', function($element, avValAdapter, $attrs, avVal, $log, $timeout, $scope, $sniffer) {\n\n    this.ngModel = null;\n    this.rule = null;\n    this.avValForm = null;\n    this.avValInvalid = false;\n\n    var self = this;\n\n    var placeholder = $element[0].placeholder;\n    var noEvent = {};\n\n    this.createId = function() {\n      this.ngModel.avId = availity.uuid('avVal');\n    };\n\n    this.setNgModel = function(ngModel) {\n      this.ngModel = ngModel;\n    };\n\n    this.setRule = function(rule) {\n      this.rule = rule;\n    };\n\n    this.avValForm = function(avValForm) {\n      this.avValForm = avValForm;\n    };\n\n    this.updateModel = function(results) {\n\n      var self = this;\n      var validationKeys = [];\n\n      this.ngModel.avResults = results;\n\n      // set state for each violation\n      angular.forEach(results.violations, function (result) {\n        var key = 'av-' + result.contraintName;\n        validationKeys.push(key);\n        self.ngModel.$setValidity(key, result.valid);\n      });\n\n      // set overall state for validation state\n      this.ngModel.$setValidity('av', this.ngModel.avResults.isValid);\n\n      // store violations\n      this.ngModel.avViolations = this.ngModel.avResults.violations;\n\n      // record the id and violation count in the av-form controller.  this determines if the form is\n      // valid if sum of violations for all form inputs === zero\n      this.avValForm.record(this.ngModel.avId, this.ngModel.avResults.violations.length);\n\n      // remove violation keys that are no longer falsy\n      angular.forEach(this.ngModel.$error, function(value, key) {\n\n        if(_.indexOf(validationKeys, key) === -1 && key.lastIndexOf('av-', 0) === 0) {\n          self.ngModel.$setValidity(key, true);\n        }\n      });\n    };\n\n    this.updateView = function() {\n      if(this.ngModel.$dirty || $scope.avValShow) {\n        avValAdapter.element($element, this.ngModel, this.ngModel.avResults.isValid);\n        avValAdapter.message($element, this.ngModel);\n      }\n    };\n\n    this.validate = function(value) {\n\n      $log.info('validating value [' + value + ']');\n\n      var rulesKey = self.avValForm.rulesKey;\n      var results = avVal.validate(rulesKey, $element, value, self.rule);\n\n      // validate function is called within the context of angular so fn.call and set the context\n      // to \"this\"\n      self.updateModel.call(self, results);\n      self.updateView.call(self);\n\n      return results;\n    };\n\n    this.validateModel = function(value) {\n\n      self.validate(value, true);\n      return value;\n\n    };\n\n    this.validateView = function(value) {\n\n      var results = self.validate(value);\n\n      if(self.avValForm.avValInvalid || self.avValInvalid) {\n        // allows invalid data from view to update model for dirty saving\n        return value;\n      }\n\n      // prevent invalid data from view to update model\n      return results.isValid ? value : undefined;\n\n    };\n\n    this.onDebounce = function() {\n\n      var value = $element.val().trim();\n\n      if(this.isCheckbox()) {\n        this.ngModel.$setViewValue($element[0].checked);\n      } else if(this.isRadio()) {\n        this.ngModel.$setViewValue($attrs.value);\n      }else {\n        this.ngModel.$setViewValue(value);\n      }\n\n    };\n\n    this.isRadio = function() {\n      return $element.is('input') && $attrs.type === 'radio';\n    };\n\n    this.isCheckbox = function() {\n      return $element.is('input') && $attrs.type === 'checkbox';\n    };\n\n    this.reset = function() {\n\n      var violations = this.ngModel.avResults.violations;\n      violations.splice(0, violations.length);\n\n      avValAdapter.message($element, this.ngModel);\n      avValAdapter.reset($element);\n\n    };\n\n    this.event = function(event, avValDebounce) {\n\n      var self = this;\n\n      $element.unbind('input');\n\n      var debounce;\n\n      $element.on(event, function() {\n\n        // https://github.com/angular/angular.js/blob/v1.2.27/src/ng/directive/input.js#L508\n        if($sniffer.msie <= 11 && (event || noEvent).type === 'input' && $element[0].placeholder !== placeholder) {\n          placeholder = $element[0].placeholder;\n          return;\n        }\n\n        $timeout.cancel(debounce);\n        debounce = $timeout(function() {\n          $scope.$apply(function() {\n            self.onDebounce();\n          });\n        }, avValDebounce);\n\n      });\n\n    };\n\n  });\n\n  // Events:\n  //\n  //  click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown\n  //  keyup keypress submit focus blur copy cut paste\n  availity.ui.directive('avValField', function($log, $timeout, avVal, avValAdapter, AV_VAL) {\n    return {\n      restrict: 'A',\n      controller: 'AvValFieldController',\n      require: ['^avValForm', 'ngModel', 'avValField'],\n      scope: {\n        avValDebounce: '@?',\n        avValOn: '@?',\n        avValShow: '=?'\n      },\n      link: function(scope, element, attrs, controllers) {\n\n        var rule = attrs.avValField;\n        var avValForm = controllers[0];\n        var ngModel = controllers[1];\n        var avValField = controllers[2];\n\n        var avValOn = scope.avValOn || avValForm.avValOn || 'input';\n\n        if(!ngModel && !rule) {\n          $log.error('avValField requires ngModel and a validation rule to run.');\n          return;\n        }\n\n        // Allows fields to update with invalid data for dirty form saving\n        avValField.avValInvalid = attrs.avValInvalid || false;\n\n        // CACHE THE MODEL\n        avValField.setNgModel(ngModel);\n\n        avValField.avValForm(avValForm);\n\n        avValField.setRule(rule);\n\n        avValField.createId();\n\n        // DEBOUNCE\n        var avValDebounce = parseInt(scope.avValDebounce || (avValForm.avValDebounce || AV_VAL.DEBOUNCE), 10);\n        avValDebounce = _.isNumber(avValDebounce) ? avValDebounce : AV_VAL.DEBOUNCE;\n\n        var debounceAllowed = !avValField.isRadio() && !avValField.isCheckbox() && avValOn !== 'blur';\n\n        if(!debounceAllowed) {\n          avValDebounce = 0;\n        }\n\n        // EVENT LISTENER\n        avValField.event(avValOn, avValDebounce);\n\n        // (view to model)\n        ngModel.$parsers.push(avValField.validateView);\n\n        // (model to view) - added to beginning of array because formatters\n        // are processed in reverse order thus allowing the model to be transformed\n        // before the validation framework check for validity.\n        ngModel.$formatters.unshift(avValField.validateModel);\n\n        scope.$on(AV_VAL.EVENTS.REVALIDATE, function() {\n          avValField.validate(ngModel.$viewValue);\n        });\n\n        // SUBMITTED EVENT\n        scope.$on(AV_VAL.EVENTS.SUBMITTED, function() {\n          ngModel.$dirty = true;\n          avValField.validate(ngModel.$viewValue);\n        });\n\n        // - Removes all errors on page,\n        // - does not reset view or model values.  This is to be handled by the app.\n        scope.$on(AV_VAL.EVENTS.RESET, function () {\n          avValField.reset();\n        });\n\n        scope.$on('$destroy', function () {\n          avValForm.unrecord(ngModel.avId);\n        });\n\n      }\n    };\n  });\n\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.provider('avPopoverConfig', function() {\n\n    var config = {\n      showOnLoadHideDelay: 10000\n    };\n\n    this.set = function(options) {\n      angular.extend(config, options);\n    };\n\n    this.$get = function() {\n      return angular.copy(config);\n    };\n  });\n\n  availity.ui.constant('AV_POPOVER', {\n    NAME: 'bs.popover'\n  });\n\n  availity.ui.controller('AvPopoverController', function($element, $scope, AV_POPOVER, $timeout, avPopoverConfig) {\n    this.options = angular.extend({}, avPopoverConfig);\n\n    this.listeners = function() {\n\n      var self = this;\n\n      angular.forEach(['show', 'shown', 'hide', 'hidden'], function(name) {\n        $element.on(name + '.bs.popover', function(ev) {\n          $scope.$emit('av:popover:' + name, ev);\n        });\n      });\n\n      $scope.$on('destroy', function() {\n        self.destroy();\n      });\n    };\n\n    this.plugin = function() {\n      return $element.data(AV_POPOVER.NAME);\n    };\n\n    this.show = function() {\n      $element.popover('show');\n    };\n\n    this.hide = function() {\n      $element.popover('hide');\n    };\n\n    this.toggle = function() {\n      $element.popover('toggle');\n    };\n\n    this.destroy = function() {\n      $element.popover('destroy');\n    };\n\n\n    this.init = function() {\n\n      this.listeners();\n\n      if($scope.showOnLoad) {\n\n        this.show();\n\n        if($scope.delay && $scope.delay.hide) {\n          $timeout(this.hide, $scope.delay.hide, false);\n          return;\n        }\n        // If no delay is found or cannot be parsed, set a default timeout so that the popover doesn't stick around forever\n        $timeout(this.hide, this.options.showOnLoadHideDelay, false);\n      }\n    };\n\n\n  });\n\n  availity.ui.directive('avPopover', function() {\n    return {\n      restrict: 'A',\n      controller: 'AvPopoverController',\n      scope: {\n        showOnLoad: '=',\n        delay: '='\n      },\n      link: function(scope, element, attrs, avPopover) {\n\n        var options = {};\n\n        scope.$evalAsync(function() {\n          element.popover(angular.extend({}, options, {\n            html: true\n          }));\n          avPopover.init();\n        });\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.provider('avTooltipConfig', function() {\n\n    var config = {\n      showOnLoadHideDelay: 10000\n    };\n\n    this.set = function(options) {\n      angular.extend(config, options);\n    };\n\n    this.$get = function() {\n      return angular.copy(config);\n    };\n  });\n\n  availity.ui.constant('AV_TOOLTIP', {\n    NAME: 'bs.tooltip'\n  });\n\n  availity.ui.controller('AvTooltipController', function($element, $scope, AV_TOOLTIP, $timeout, avTooltipConfig) {\n    this.options = angular.extend({}, avTooltipConfig);\n\n    this.listeners = function() {\n\n      var self = this;\n\n      angular.forEach(['show', 'shown', 'hide', 'hidden'], function(name) {\n        $element.on(name + '.bs.tooltip', function(ev) {\n          $scope.$emit('av:tooltip:' + name, ev);\n        });\n      });\n\n      $scope.$on('destroy', function() {\n        self.destroy();\n      });\n    };\n\n    this.plugin = function() {\n      return $element.data(AV_TOOLTIP.NAME);\n    };\n\n    this.show = function() {\n      $element.tooltip('show');\n    };\n\n    this.hide = function() {\n      $element.tooltip('hide');\n    };\n\n    this.toggle = function() {\n      $element.tooltip('toggle');\n    };\n\n    this.destroy = function() {\n      $element.tooltip('destroy');\n    };\n\n\n    this.init = function() {\n\n      this.listeners();\n\n      if($scope.showOnLoad) {\n\n        this.show();\n\n        if($scope.delay && $scope.delay.hide) {\n          $timeout(this.hide, $scope.delay.hide, false);\n          return;\n        }\n        // If no delay is found or cannot be parsed, set a default timeout so that the tooltip doesn't stick around forever\n        $timeout(this.hide, this.options.showOnLoadHideDelay, false);\n      }\n    };\n\n\n  });\n\n  availity.ui.directive('avTooltip', function() {\n    return {\n      restrict: 'A',\n      controller: 'AvTooltipController',\n      scope: {\n        showOnLoad: '=',\n        delay: '='\n      },\n      link: function(scope, element, attrs, avTooltip) {\n\n        var options = {};\n\n        scope.$evalAsync(function() {\n          element.tooltip(angular.extend({}, options, {\n            html: true\n          }));\n          avTooltip.init();\n        });\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.controller('avValContainerController', function($scope, $timeout) {\n\n    this.message = function(ngModel) {\n\n      var message = null;\n      if(ngModel.avResults.violations.length && ngModel.avResults.violations[0].message) {\n        message = ngModel.avResults.violations[0].message;\n      }else {\n        message = null;\n      }\n\n      // $timeout is needed to update the UI from $broadcast events\n      $timeout(function() {\n        $scope.messages.message = message;\n      });\n\n    };\n\n  });\n\n  availity.ui.directive('avValContainer', function() {\n    return {\n      restrict: 'A',\n      controller: 'avValContainerController',\n      template: '<p class=\"help-block\" data-ng-bind-html=\"messages.message\"></p>',\n      replace: true,\n      scope: {\n\n      },\n      link: function(scope) {\n        scope.messages = _.extend({}, scope.messages, { message: null, id: null });\n      }\n    };\n  });\n\n\n})(window);\n","(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_BOOTSTRAP_ADAPTER', {\n    CLASSES: {\n      SUCCESS: 'has-success',\n      WARNING: 'has-warning',\n      ERROR: 'has-error',\n      FEEDBACK: 'has-feedback',\n      HELP: 'help-block',\n      FORM_GROUP: '.form-group:first',\n      NAVBAR: 'navbar-fixed-top'\n    },\n    SELECTORS: {\n      CONTAINER: 'container-id',\n      DATA_CONTAINER: 'data-container-id'\n    },\n    CONTROLLER: '$avValContainerController'\n  });\n\n  availity.ui.factory('avValBootstrapAdapter', function(AV_BOOTSTRAP_ADAPTER, $timeout, $log) {\n\n    return {\n\n      element: function(element, ngModel) {\n        if(ngModel.$valid) {\n          element.parents(AV_BOOTSTRAP_ADAPTER.CLASSES.FORM_GROUP).removeClass(AV_BOOTSTRAP_ADAPTER.CLASSES.ERROR);\n        }else {\n          element.parents(AV_BOOTSTRAP_ADAPTER.CLASSES.FORM_GROUP).addClass(AV_BOOTSTRAP_ADAPTER.CLASSES.ERROR);\n        }\n      },\n\n      reset: function(element) {\n        element.parents(AV_BOOTSTRAP_ADAPTER.CLASSES.FORM_GROUP).removeClass(AV_BOOTSTRAP_ADAPTER.CLASSES.ERROR);\n      },\n\n      message: function(element, ngModel) {\n\n        var selector = [\n          '.',\n          AV_BOOTSTRAP_ADAPTER.CLASSES.HELP\n        ].join('');\n\n        var $el = $(element);\n\n        var target = $el.attr(AV_BOOTSTRAP_ADAPTER.SELECTORS.CONTAINER);\n        target = target || $el.attr(AV_BOOTSTRAP_ADAPTER.SELECTORS.DATA_CONTAINER);\n        // default to siblings\n        target = target ? $('#' + target) : $el.siblings(selector);\n\n        if(target.length === 0) {\n          $log.warn('avValBootstrapAdapter could not find validation container for {0}', [element]);\n          return;\n        }\n\n        var el = target[0];\n        $el = angular.element(el);\n        var avValModel = $el.data(AV_BOOTSTRAP_ADAPTER.CONTROLLER); // get the av val message controller\n        if(avValModel) {\n          avValModel.message(ngModel);\n        }\n      },\n\n      scroll: function(form) {\n\n        // Bootstrap fixed navbars causes bad scroll-to offsets so find them all\n        var navbarSelector = [\n          '.',\n          AV_BOOTSTRAP_ADAPTER.CLASSES.NAVBAR\n        ].join('');\n\n        // Add up all the heights to find the true offset\n        var offset = 0;\n        $(navbarSelector).each(function() {\n          offset += $(this).outerHeight();\n        });\n\n        var selector = [\n          '.',\n          AV_BOOTSTRAP_ADAPTER.CLASSES.ERROR,\n          ':first'\n        ].join('');\n\n        var $target = $(form).find(selector);\n        $timeout(function() {\n          // scroll to offset top of first error minus the offset of the navbars\n          $('body, html').animate({scrollTop: $target.offset().top - offset}, 'fast');\n        }, 0, false);\n      }\n    };\n  });\n\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_VAL_ADAPTER', {\n    DEFAULT: 'avValBootstrapAdapter'\n  });\n\n  availity.ui.provider('avValAdapter', function() {\n\n    var that = this;\n\n    this.setAdapter = function(adapter) {\n      this.adapter = adapter;\n    };\n\n    this.$get = function(AV_VAL_ADAPTER, $injector) {\n\n      var Adapter = function() {\n        var adapterName = that.adapter || AV_VAL_ADAPTER.DEFAULT;\n        this.adapter = $injector.get(adapterName);\n      };\n\n      var proto = Adapter.prototype;\n\n      proto.element = function(element, ngModel) {\n        this.adapter.element(element, ngModel);\n      };\n\n      proto.reset = function(element) {\n        this.adapter.reset(element);\n      };\n\n      proto.message = function(element, ngModel) {\n        this.adapter.message(element, ngModel);\n      },\n\n      proto.scroll = function(form) {\n        this.adapter.scroll(form);\n      };\n\n      return new Adapter();\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.provider('avDropdownConfig', function() {\n\n    var config = {\n      closeOnResize: true,\n      dropdownAutoWidth: true,\n      minimumResultsForSearch: 5\n    };\n\n    this.set = function(options) {\n      angular.extend(config, options);\n    };\n\n    this.$get = function() {\n      return angular.copy(config);\n    };\n  });\n\n  availity.ui.constant('AV_DROPDOWN', {\n    OPTIONS: [\n      'width',\n      'minimumInputLength',\n      'maximumInputLength',\n      'minimumResultsForSearch',\n      'maximumSelectionSize',\n      'placeholderOption',\n      'separator',\n      'allowClear',\n      'multiple',\n      'closeOnSelect',\n      'openOnEnter',\n      'id',\n      'matcher',\n      'sortResults',\n      'formatSelection',\n      'formatResult',\n      'formatResultCssClass',\n      'formatNoMatches',\n      'formatSearching',\n      'formatAjaxError',\n      'formatInputTooShort',\n      'formatInputTooLong',\n      'formatSelectionTooBig',\n      'formatLoadMore',\n      'createSearchChoice',\n      'createSearchChoicePosition',\n      'initSelection',\n      'tokenizer',\n      'tokenSeparators',\n      'query',\n      'ajax',\n      'data',\n      'tags',\n      'containerCss',\n      'containerCssClass',\n      'dropdownCss',\n      'dropdownCssClass',\n      'dropdownAutoWidth',\n      'adaptContainerCssClass',\n      'adaptDropdownCssClass',\n      'escapeMarkup',\n      'selectOnBlur',\n      'loadMorePadding',\n      'nextSearchTerm',\n      'correlationId',\n      'eventListeners'\n    ]\n  });\n\n\n  availity.ui.controller('AvDropdownController', function($element, $attrs, AV_UI, AV_DROPDOWN, avDropdownConfig, $log, $scope, $timeout, $parse) {\n\n    var self = this;\n    this.options = {};\n    this.match = null;\n    this.ngModel = null;\n\n    this.init = function() {\n\n      self.options = angular.extend({}, avDropdownConfig);\n\n      _.forEach($attrs, function(value, key) {\n        if(_.contains(AV_DROPDOWN.OPTIONS, key.replace('data-', ''))) {\n          self.options[key] = $scope.$eval(value);\n        }\n      });\n\n      if(this.isRemoteMultiple()) {\n        self.options.multiple = angular.isDefined($attrs.multiple);\n      }\n\n      self.multiple = angular.isDefined($attrs.multiple);\n\n      if(self.options.query) {\n\n        self.queryFn = self.options.query;\n        // Function used to query results for the search term.\n        self.options.query = self.query;\n        // Function used to get the id from the choice object or a string representing the key under which the id is stored.\n        self.options.id = self.getId;\n      }\n\n    };\n\n    this.isRemoteMultiple = function() {\n      if(angular.isDefined($attrs.multiple) && $element.get(0).tagName.toLowerCase() === 'input') {\n        return true;\n      }\n      return false;\n    };\n\n    this.setRemoteViewValue = function(e) {\n\n      var values = this.ngModel.$viewValue;\n\n      if(!angular.isArray(values) || !angular.isObject(values)) {\n        values = [];\n      }\n\n      if(e.added) {\n        // Adding to collection\n        values.push(e.added);\n      } else {\n        // Removing from collection\n        var index = _.findIndex(values, function(value) {\n          return  _.matches(e.removed)(value);\n        });\n        values.splice(index, 1);\n      }\n\n      this.ngModel.$setViewValue(values);\n\n    };\n\n    this.setViewValue = function(e) {\n      this.ngModel.$setViewValue(e.added);\n    };\n\n    this.setNgModel = function(ngModel) {\n      this.ngModel = ngModel;\n    };\n\n    this.getSelected = function(model) {\n\n      if(self.options.query) {\n        return 0;\n      }\n\n      if (!this.collection) {\n        // If we're not using ng-options, the model value is just the raw value of the option, rather than an index, so return it as is.\n        return model;\n      }\n\n      var items = this.collection($scope);\n\n      var index = _.findIndex(items, function(item) {\n        if (!self.valueFn) {\n          return angular.equals(item, model);\n        } else {\n          var locals = {};\n          locals[self.valueName] = item;\n          var value = self.valueFn($scope, locals);\n          return angular.equals(value, model);\n        }\n      });\n\n      return index;\n\n    };\n\n    // Result:\n    //\n    // {\n    //   \"code\": \"252Y00000X\",\n    //   \"value\": \"AGENCIES,EARLY INTERVENTION PROVIDER AGENCY,NOT APPLICABLE|Agency\",\n    //   \"id\": \"252Y00000X\"\n    // }\n    this.getId = function(result) {\n      return result.id;\n    };\n\n    // Wrapper around the query function for Select2.  When the promise resolves\n    // the callback\n    this.query = function(options) {\n\n      self.queryFn(options).then(function(response) {\n\n        // Callback function that should be called with the result object. The result object:\n        //\n        // result.results (object) - Array of result objects. The default renderers\n        //    expect objects with id and text keys. The id property is required,\n        //    even if custom renderers are used. The object may also contain a children\n        //    key if hierarchical data is displayed. The object may also contain a disabled\n        //    boolean property indicating whether this result can be selected.\n        //\n        // result.more (boolean) - true if more results are available for the current\n        //    search term.\n        //\n        // results.context (object) - A user-defined object that should be made available\n        //    as the context parameter to the query function on subsequent queries to load\n        //    more result pages for the same search term. See the description of\n        //    options.context parameter.\n        options.callback({more: response.more, results: response.results});\n      });\n    };\n\n    this.setValue = function() {\n\n      var viewValue = self.ngModel.$viewValue;\n      var selected = null;\n      if(viewValue !== null && viewValue !== undefined) {\n        selected = this.getSelected(viewValue);\n      }\n\n      // var apply = scope.$evalAsync || $timeout;\n      $timeout(function() {\n        $element\n          .select2('val',  (selected === null || selected === 'undefined') ? '' : selected); // null === '' for Select2\n      });\n    };\n\n    this.getMultiSelected = function(viewValue) {\n\n      var indices = [];\n\n      if($element.get(0).tagName.toLowerCase() !== 'input') {\n        var options = this.collection($scope);\n\n        _.each(viewValue, function(savedObject) {\n          var index = _.findIndex(options, function(value) {\n            var temp = angular.copy(savedObject); // remove hashkeys for comparison\n            return _.matches(temp)(value);\n          });\n          indices.push(index);\n        });\n\n      } else {\n\n        var inputViewValues = this.ngModel.$modelValue;\n\n        _.each(inputViewValues, function(savedObject) {\n\n          if(_.isUndefined(savedObject.id) ) {\n\n            if(savedObject.id || savedObject[self.options.correlationId]) {\n\n              savedObject.id = savedObject[self.options.correlationId];\n\n            } else {\n\n              throw new Error('dropdown list must have a id or a alternative value to use as a id');\n            }\n\n          }\n\n        });\n      }\n\n      if(indices.length > 0) {\n        viewValue = indices;\n      }\n\n      return viewValue;\n\n    };\n\n    this.setValues = function() {\n\n      var viewValue = self.ngModel.$viewValue;\n\n      if(!angular.isArray(viewValue)) {\n        viewValue = [];\n      }\n\n      if(!_.isEmpty(viewValue) && _.isObject(viewValue[0])) {\n        viewValue = this.getMultiSelected(viewValue);\n      }\n\n      $timeout(function() {\n        $element\n          .select2('val', viewValue);\n      });\n    };\n\n    this.ngOptions = function() {\n\n      this.match = $attrs.ngOptions.match(AV_UI.NG_OPTIONS);\n      if(!this.match) {\n        throw new Error('Invalid ngOptions for avDropdown');\n      }\n      // AV_UI.NG_OPTIONS regex will parse into arrays like below:\n      //\n      // 0: \"state.name for state in states\"\n      // 1: \"state.name\"\n      // 2: undefined\n      // 3: undefined\n      // 4: \"state\"\n      // 5: undefined\n      // 6: undefined\n      // 7: \"states\"\n      // 8: undefined\n      //\n      // 0: \"state.id as state.name for state in states\"\n      // 1: \"state.id\"\n      // 2: \"state.name\"\n      // 3: undefined\n      // 4: \"state\"\n      // 5: undefined\n      // 6: undefined\n      // 7: \"states\"\n      // 8: undefined\n      //\n      // 0: \"state.name for state in states track by state.id\"\n      // 1: \"state.name\"\n      // 2: undefined\n      // 3: undefined\n      // 4: \"state\"\n      // 5: undefined\n      // 6: undefined\n      // 7: \"states\"\n      // 8: \"state.id\"\n      //\n      // 0: \"person.fullName as (person.lastName + ', ' + person.firstName) for person in feeScheduleModel.persons\"\n      // 1: \"person.fullName\"\n      // 2: \"(person.lastName + ', ' + person.firstName)\"\n      // 3: undefined\n      // 4: \"person\"\n      // 5: undefined\n      // 6: undefined\n      // 7: \"feeScheduleModel.persons\"\n      // 8: undefined\n      //\n      this.displayFn = $parse(this.match[2] || this.match[1]); // this is the function to retrieve the text to show as\n      this.collection = $parse(this.match[7]);\n      this.valueName = this.match[4] || this.match[6];\n      this.valueFn = $parse(this.match[2] ? this.match[1] : this.valueName);\n      this.keyName = this.match[5];\n\n      $scope.$watchCollection(this.collection, function(newVal, oldVal) {\n        if(angular.equals(newVal, oldVal)) {\n          return;\n        }\n\n        self.setValue();\n\n      }, true);\n\n    };\n  });\n\n  availity.ui.directive('avDropdown', function($timeout, $log, $window) {\n\n    return {\n      restrict: 'A',\n      require: ['ngModel', 'avDropdown'],\n      controller: 'AvDropdownController',\n      link: function(scope, element, attrs, controllers) {\n\n        var ngModel = controllers[0];\n        var avDropdown = controllers[1];\n\n        avDropdown.setNgModel(ngModel);\n        avDropdown.init();\n\n        if(attrs.ngOptions ) {\n          avDropdown.ngOptions();\n        }\n\n        ngModel.$parsers.push(function(value) {\n          var parent = element.prev();\n          parent\n            .toggleClass('ng-invalid', !ngModel.$valid)\n            .toggleClass('ng-valid', ngModel.$valid)\n            .toggleClass('ng-invalid-required', !ngModel.$valid)\n            .toggleClass('ng-valid-required', ngModel.$valid)\n            .toggleClass('ng-dirty', ngModel.$dirty)\n            .toggleClass('ng-pristine', ngModel.$pristine);\n          return value;\n        });\n\n        element.on('change', function(e) {\n\n          // special case since the ajax handling doesn't bind to the model correctly\n          // this has to do with select2 (v3.5.2) using a hidden field instead of a select for ajax\n          if(avDropdown.options.query) {\n            $timeout(function() {\n              // look at moving this to the controller\n              if(avDropdown.isRemoteMultiple()) {\n                avDropdown.setRemoteViewValue(e);\n              } else {\n                avDropdown.setViewValue(e);\n              }\n\n            }, false, 0);\n          }\n\n          $log.info(e);\n\n        });\n\n        // fires ng-focus when select2-focus fires.\n        element.on('select2-focus', function() {\n          if(attrs.ngFocus) {\n            scope.$eval(scope.$eval(attrs.ngFocus));\n          }\n        });\n\n        // fires ng-blur when select2-blur occurs.\n        element.on('select2-blur', function() {\n          if(attrs.ngBlur) {\n            scope.$eval(scope.$eval(attrs.ngBlur));\n          }\n        });\n\n        // https://github.com/t0m/select2-bootstrap-css/issues/37#issuecomment-42714589\n        element.on('select2-open', function () {\n          // look for .has-success, .has-warning, .has-error\n          // (really look for .has-* … which is good enough for the demo page, but obviously might interfere with other CSS-classes starting with \"has-\")\n          if(element.parents('[class*=\"has-\"]').length) {\n\n            // get all CSS-classes from the element where we found \"has-*\" and collect them in an array\n            var classNames = $(this).parents('[class*=\"has-\"]')[0].className.split(/\\s+/);\n\n            // go through the class names, find \"has-\"\n            for(var i = 0; i < classNames.length; ++i) {\n              if(classNames[i].match('has-')) {\n                $('#select2-drop').addClass(classNames[i]);\n              }\n            }\n          }\n        });\n\n        var _$render = ngModel.$render;\n        ngModel.$render = function() {\n          _$render();\n\n          if(avDropdown.multiple) {\n            avDropdown.setValues();\n          }else {\n            avDropdown.setValue();\n          }\n\n        };\n\n        if(avDropdown.options.closeOnResize) {\n\n          var win = angular.element($window);\n          win.bind('resize', function() {\n            element.select2('close');\n          });\n\n        }\n\n        attrs.$observe('disabled', function (value) {\n          element.select2('enable', !value);\n        });\n\n        attrs.$observe('readonly', function (value) {\n          element.select2('readonly', !!value);\n        });\n\n        scope.$on('$destroy', function() {\n          element.off();\n          element.select2('destroy');\n        });\n\n        $timeout(function() {\n          element.select2(avDropdown.options);\n        });\n\n        // If event listeners are specified in the options, set them up here\n        if (_.get(avDropdown, 'options.eventListeners')) {\n          _.each(avDropdown.options.eventListeners, function(listener, eventId) {\n            if (_.isFunction(listener)) {\n              element.on(eventId, listener);\n            }\n          });\n        }\n      }\n    };\n  });\n\n})(window);\n","/**\n * Inspiration https://github.com/mgcrea/angular-strap/blob/v0.7.8/src/directives/datepicker.js\n */\n(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.provider('avDatepickerConfig', function() {\n\n    var config = {\n      autoclose: true,\n      todayHighlight: true,\n      format: 'mm/dd/yyyy',\n      forceParse: false\n    };\n\n    this.set = function(options) {\n      angular.extend(config, options);\n    };\n\n    this.$get = function() {\n      return angular.copy(config);\n    };\n\n  });\n\n  // Options: http://bootstrap-datepicker.readthedocs.org/en/latest/options.html\n  availity.ui.constant('AV_DATEPICKER', {\n    CONTROLLER: '$ngModelController',\n    ADD_ON_SELECTOR: '[data-toggle=\"datepicker\"]',\n    OPTIONS: [\n      'autoclose',\n      'beforeShowDay',\n      'beforeShowMonth',\n      'calendarWeeks',\n      'clearBtn',\n      'toggleActive',\n      'container',\n      'daysOfWeekDisabled',\n      'datesDisabled',\n      'defaultViewDate',\n      'endDate',\n      'forceParse',\n      'format',\n      'inputs',\n      'keyboardNavigation',\n      'language',\n      'minViewMode',\n      'multidate',\n      'multidateSeparator',\n      'orientation',\n      'startDate',\n      'startView',\n      'todayBtn',\n      'todayHighlight',\n      'weekStart',\n      'showOnFocus',\n      'disableTouchKeyboard',\n      'enableOnReadonly',\n      'modelFormat'\n    ],\n    DEFAULTS: {\n      MODELFORMAT: 'YYYY-MM-DD'\n    }\n  });\n\n  availity.ui.controller('AvDatepickerController', function($element, $attrs, AV_DATEPICKER, $scope, avDatepickerConfig) {\n\n    var self = this;\n    this.options = {};\n\n    this.setValue = function() {\n\n      var viewValue = self.ngModel.$viewValue;\n      var plugin = this.plugin();\n\n      if(!viewValue || !plugin) {\n        return;\n      }\n\n      plugin.setDate(viewValue);\n    };\n\n    this.setNgModel = function(ngModel) {\n      this.ngModel = ngModel;\n    };\n\n    this.findModel = function() {\n\n      var ngModel = null;\n\n      var $input = $element.find('input:first').andSelf();\n      if($input.length) {\n        ngModel = $input.data(AV_DATEPICKER.CONTROLLER);\n        this.setNgModel(ngModel);\n      }\n\n      return ngModel;\n    };\n\n    this.modelToView = function(isoWrap) {\n      var viewValue = $.fn.datepicker.DPGlobal.formatDate(isoWrap, self.options.format, 'en');\n      return viewValue;\n    };\n\n    this.wrapIsoDate = function() {\n\n      var date = self.ngModel.$modelValue;\n      var isoWrap;\n\n      if(date !== undefined && date !== null) {\n        var m = moment(date);\n        isoWrap = m.isValid() ? m.toDate() : null;\n      }\n\n      return isoWrap;\n    };\n\n    this.viewToModel = function() {\n      var format = $.fn.datepicker.DPGlobal.parseFormat(self.options.format);\n      var utcDate = $.fn.datepicker.DPGlobal.parseDate(self.ngModel.$viewValue, format, 'en');\n\n      var plugin = self.plugin();\n\n      if(!plugin) {\n        return;\n      }\n\n      // jscs: disable\n      var localDate = plugin._utc_to_local(utcDate);\n      // jscs: enable\n\n      if(self.options.modelFormat && localDate) {\n        localDate = moment(localDate).format(self.options.modelFormat);\n      }\n\n      return localDate;\n    };\n\n    this.init = function() {\n\n      self.options = angular.extend({}, avDatepickerConfig);\n\n      _.forEach($attrs, function(value, key) {\n        if(_.contains(AV_DATEPICKER.OPTIONS, key.replace('data-', ''))) {\n          self.options[key] = $scope.$eval(value);\n        }\n      });\n\n      if(self.options.modelFormat && self.options.modelFormat.toLowerCase() === 'default') {\n        self.options.modelFormat = AV_DATEPICKER.DEFAULTS.MODELFORMAT;\n      }\n    };\n\n    this.plugin = function() {\n      return $element.data('datepicker');\n    };\n\n    this.destroy = function() {\n      var plugin = this.plugin();\n      if(plugin) {\n        plugin.remove();\n        $element.data('datepicker', null);\n      }\n    };\n\n    this.hide = function() {\n      var plugin = this.plugin();\n      if(plugin) {\n        plugin.hide();\n      }\n    };\n  });\n\n  availity.ui.directive('avDatepicker', function($window, $log, AV_DATEPICKER) {\n    return {\n      restrict: 'A',\n      require: ['ngModel', 'avDatepicker'],\n      controller: 'AvDatepickerController',\n      link: function(scope, element, attrs, controllers) {\n\n        var ngModel = controllers[0];\n        var avDatepicker = controllers[1];\n\n        if(!ngModel) {\n          ngModel = avDatepicker.findModel();\n          if(!ngModel) {\n            $log.error('avDatepicker requires ngModel');\n            return;\n          }\n        }\n\n        avDatepicker.init();\n        avDatepicker.setNgModel(ngModel);\n\n        element.on('changeDate', function(e) {\n          $log.info('avDatepicker changeDate {0}', [e]);\n        });\n\n        // (view to model)\n        ngModel.$parsers.push(avDatepicker.viewToModel);\n\n        // (model to view) - added to end of formatters array\n        // because they are processed in reverse order.\n        // if the model is in Date format and send to the validation framework\n        // prior to getting converted to the expected $viewValue format,\n        // the validation will fail.\n        ngModel.$formatters.push(avDatepicker.modelToView);\n        ngModel.$formatters.push(avDatepicker.wrapIsoDate);\n\n        var _$render = ngModel.$render;\n        ngModel.$render = function() {\n          _$render();\n          avDatepicker.setValue();\n        };\n\n        var win = angular.element($window);\n\n        win.bind('scroll', function() {\n          avDatepicker.hide();\n        });\n\n        var target = element.siblings(AV_DATEPICKER.ADD_ON_SELECTOR);\n        if(target.length) {\n          target.on('click.datepicker', function() {\n            if(!element.prop('disabled')) { // Hack check for IE 8\n              element.focus();\n            }\n          });\n        }\n\n        scope.$on('destroy', function() {\n          avDatepicker.destroy();\n          if(target.length) {\n            target.off('click.datepicker');\n          }\n        });\n\n        scope.$evalAsync(function() {\n          element.datepicker(avDatepicker.options);\n        });\n      }\n    };\n  });\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_UI_IDLE', {\n    EVENTS: {\n      OK: 'mousedown.av.idle.notifier'\n    },\n    TEMPLATES: {\n      BASE: 'ui/idle/idle-tpl.html',\n      SESSION: 'ui/idle/idle-session-tpl.html',\n      WARNING: 'ui/idle/idle-warning-tpl.html'\n    }\n  });\n\n  availity.ui.provider('avIdleNotifier', function() {\n\n    var sessionTemplate;\n    var warningTemplate;\n    var $scope;\n\n    this.setSessionTemplate = function(template) {\n      sessionTemplate = template;\n    };\n\n    this.setWarningTemplate = function(template) {\n      warningTemplate = template;\n    };\n\n    this.$get = function(AV_IDLE, AV_UI_IDLE, $rootScope, AvModal, $document, $timeout) {\n\n      var AvIdleNotifier = function() {\n        this.listeners = [];\n        this.modal = null;\n      };\n\n      var proto = AvIdleNotifier.prototype;\n\n      proto.init = function() {\n\n        $scope = $rootScope.$new(true);\n        $scope.idle = {};\n\n        this.initListeners();\n      };\n\n      proto.initListeners = function() {\n\n        var self = this;\n        var listener = null;\n\n        // ACTIVE IDLING\n        listener = $rootScope.$on(AV_IDLE.EVENTS.IDLE_ACTIVE, function() {\n          self.showWarning();\n        });\n        this.listeners.push(listener);\n\n        // INACTIVE IDLING\n        listener = $rootScope.$on(AV_IDLE.EVENTS.IDLE_INACTIVE, function() {\n          self.hideWarning();\n        });\n        this.listeners.push(listener);\n\n        // SESSION TIMEOUT OUT\n        listener = $rootScope.$on(AV_IDLE.EVENTS.SESSION_TIMEOUT_ACTIVE, function() {\n          self.showSession();\n        });\n        this.listeners.push(listener);\n\n      };\n\n      proto.destroyListeners = function() {\n        // turn off each listener @see http://stackoverflow.com/a/14898795\n        _.each(this.listeners, function(listener) {\n          listener();\n        });\n      };\n\n      proto.showWarning = function() {\n\n        var self = this;\n\n        if(this.modal !== null) {\n          return;\n        }\n\n        $scope = $rootScope.$new(true);\n        $scope.idle = {};\n        $scope.idle.template = AV_UI_IDLE.TEMPLATES.WARNING;\n\n        this.modal = new AvModal({\n          show: true,\n          scope: $scope,\n          backdrop: 'static',\n          templateUrl: AV_UI_IDLE.TEMPLATES.BASE\n        });\n\n        $document.find('body').on(AV_UI_IDLE.EVENTS.OK, function() {\n          self.hideWarning();\n        });\n\n      };\n\n      proto.hideWarning = function() {\n        if(this.modal) {\n          this.disableBackDrop();\n          this.modal.hide();\n        }\n\n        this.modal = null;\n      };\n\n      proto.disableBackDrop = function() {\n        $document.find('body').off(AV_UI_IDLE.EVENTS.OK);\n      };\n\n      proto.showSession = function() {\n        var self = this;\n        this.disableBackDrop();\n\n        $timeout(function() {\n          $scope.idle.template = AV_UI_IDLE.TEMPLATES.SESSION;\n          $scope.idle.onSessionTimeout = _.bind(self.onSessionTimeout, self);\n        }, 0, true);\n\n      };\n\n      proto.onSessionTimeout = function() {\n        $rootScope.$broadcast(AV_IDLE.EVENTS.SESSION_TIMEOUT_REDIRECT);\n      };\n\n      return new AvIdleNotifier();\n\n    };\n\n  });\n\n  availity.ui.run(function(avIdleNotifier) {\n    avIdleNotifier.init();\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_MASK', {\n    NAME: 'inputmask',\n    DEFAULTS: {\n      date: '99/99/9999',\n      phone: '(999) 999-9999',\n      SSN:'999-99-9999'\n    }\n  });\n\n  availity.ui.directive('avMask', function($window, $log, AV_MASK) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function(scope, element, attrs) {\n\n        var maskType = AV_MASK.DEFAULTS[attrs['avMask']];\n        if(!maskType) {\n          maskType = attrs['avMask'];\n        }\n\n        scope.$evalAsync(function() {\n          element.inputmask(maskType);\n        });\n\n        scope.$on('$destroy', function () {\n          element.inputmask('remove');\n        });\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.controller('AvHasPermissionController', function($element) {\n\n    this.onSuccess = function(isAuthorized) {\n      if(isAuthorized) {\n        $element.removeClass('ng-hide');\n        $element.show();\n      } else {\n        $element.remove();\n      }\n    };\n\n    this.onError = function() {\n      $element.remove();\n    };\n\n  });\n\n  availity.ui.directive('avHasPermission', function(avUserAuthorizations) {\n    return {\n      restrict: 'EA',\n      controller: 'AvHasPermissionController',\n      require: ['avHasPermission'],\n      link: function($scope, $element, $attr, controllers) {\n\n        var avHasPermission = controllers[0];\n\n        $element.hide();\n\n        $scope.$watch($attr.avHasPermission, function(permissions) {\n\n          if(!angular.isArray(permissions)) {\n            permissions = _.words('' + permissions);\n          }\n\n          avUserAuthorizations.isAnyAuthorized(permissions).then(avHasPermission.onSuccess, avHasPermission.onError);\n        });\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.directive('avAnalytics', function() {\n    return {\n      scope: {\n        options: '=avAnalytics'\n      },\n      controller: function($scope) {\n        this.getOptions = function() {\n          return $scope.options;\n        };\n      }\n    };\n  });\n\n  availity.ui.controller('AvAnalyticsController', function(avAnalyticsUtils, avAnalytics) {\n\n    this.onEvent = function(event, element, options) {\n\n      // convert the directive attributes into object with properties with sane defaults\n      var properties = angular.extend(\n        {\n          level: 'info',\n          label: element.text()\n        },\n        options,\n        {\n          event: event.type\n        }\n      );\n\n      // If an external link is detected\n      if(avAnalyticsUtils.isExternalLink(properties)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      var promise = avAnalytics.trackEvent(properties);\n      promise['finally'](function() {\n        if(avAnalyticsUtils.isExternalLink(properties)) {\n          document.location = element.attr('href');\n        }\n      });\n    };\n\n  });\n\n  availity.ui.directive('avAnalyticsOn', function(AV_ANALYTICS, avAnalyticsUtils) {\n    return {\n      restrict: 'A',\n      controller: 'AvAnalyticsController',\n      require: ['avAnalyticsOn','?^avAnalytics'],\n      link: function(scope, element, attrs, controllers) {\n        var childCtrl = controllers[0];\n        var parentCtrl = {};\n        var parentOptions = {};\n\n        if (controllers[1])  {\n          parentCtrl = controllers[1];\n          parentOptions = parentCtrl.getOptions();\n        }\n\n        var eventType = attrs.avAnalyticsOn || AV_ANALYTICS.EVENTS.DEFAULT;\n\n        element.on(eventType, function(event) {\n          if(parentCtrl.getOptions) {\n            parentOptions = parentCtrl.getOptions();\n          }\n\n          var options = angular.extend(\n            {},\n            parentOptions,\n            avAnalyticsUtils.getProperties(attrs)\n          );\n\n          childCtrl.onEvent(event, element, options);\n        });\n      }\n    };\n  });\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.requires.push('ng.shims.placeholder');\n\n  availity.ui.config(function($provide) {\n\n    $provide.decorator('placeholderDirective', ['$delegate', '$log', function($delegate, $log) {\n\n      var directive = $delegate[0];\n      var originalLink = directive.link;\n\n      var newLink = function(scope, element, attrs) {\n\n        if(originalLink && _.contains(_.keys(attrs), 'avMask')) {\n          $log.info('placeholder shim not running on an element due to avMask on same element');\n          return;\n        }else if(originalLink) {\n          originalLink.apply(this, arguments);\n        }\n        //else originalLink doesn't exist\n      };\n\n      directive.compile = function() {\n        return newLink;\n      };\n\n      return $delegate;\n    }]);\n\n  });\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_BREADCRUMBS', {\n\n    TEMPLATE: 'ui/breadcrumbs/breadcrumbs-tpl.html'\n  });\n\n  function AvBreadcrumbsController($state) {\n\n    this.getBreadcrumb = function(breadcrumbs, state) {\n      if(!state || !state.data) {\n        return;\n      }\n\n      var breadcrumb = state.data.breadcrumb;\n      if(!breadcrumb) {\n        return;\n      }\n\n      if(breadcrumb.parent) {\n        var parentState = $state.get(breadcrumb.parent);\n\n        if(parentState) {\n          this.getBreadcrumb(breadcrumbs, parentState);\n        }\n      }\n      breadcrumb.state = state.name;\n      breadcrumbs.push(breadcrumb);\n    };\n\n    this.getBreadcrumbs = function() {\n      var breadcrumbs = [];\n      this.getBreadcrumb(breadcrumbs, $state.current);\n      return breadcrumbs;\n    };\n\n  }\n\n  AvBreadcrumbsController.$inject = ['$state'];\n  availity.ui.controller('AvBreadcrumbsController', AvBreadcrumbsController);\n\n  function avBreadcrumbs(AV_BREADCRUMBS) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      templateUrl: AV_BREADCRUMBS.TEMPLATE,\n      controller: 'AvBreadcrumbsController',\n      link: function(scope, element, attrs, avBreadcrumbs) {\n        scope.breadcrumbs = avBreadcrumbs.getBreadcrumbs();\n\n        scope.$on('$stateChangeSuccess', function() {\n          scope.breadcrumbs = avBreadcrumbs.getBreadcrumbs();\n        });\n      }\n    };\n  }\n\n  avBreadcrumbs.$inject = ['AV_BREADCRUMBS'];\n  availity.ui.directive('avBreadcrumbs', avBreadcrumbs);\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.directive('avSpacesBreadcrumbs', function($location, avSpacesResource) {\n    return {\n      restrict: 'A',\n      replace: true,\n      scope: {\n        'pageName': '@',\n        'spaceId': '@'\n      },\n      templateUrl: 'ui/breadcrumbs/breadcrumbs-spaces-tpl.html',\n      link: function(scope, element, attrs) {\n\n        if(!scope.spaceId) {\n          scope.spaceId = $location.search().spaceId;\n        }\n\n        avSpacesResource.get(scope.spaceId).then(function(response) {\n          scope.spaceName = response.data.name;\n        });\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.filter('avApproximate', function() {\n    var pow = Math.pow;\n    var floor = Math.floor;\n    var abs = Math.abs;\n    var log = Math.log;\n\n    function round(number, precision) {\n      var prec = pow(10, precision);\n      return Math.round(number * prec) / prec;\n    }\n\n    return function (number, precision) {\n      precision = precision || 0;\n      var base = floor(log(abs(number)) / log(1000));\n      var unit = 'kMGTPE'[base - 1];\n      return unit ? round(number / pow(1000, base), precision) + unit : (number || 0);\n    };\n  });\n\n})(window);\n","(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_ACCORDION', {\n    TEMPLATES: {\n      BASE: 'ui/accordion/accordion-tpl.html',\n      GROUP: 'ui/accordion/accordion-group-tpl.html'\n    }\n  });\n\n  function AvAccordionController(){\n    // This array keeps track of the accordion groups\n    this.groups = [];\n\n    // This is called from the accordion-group directive to add itself to the accordion\n    this.addGroup = function (groupScope) {\n      var that = this;\n      this.groups.push(groupScope);\n\n      groupScope.$on('$destroy', function () {\n        that.removeGroup(groupScope);\n      });\n    };\n\n    // This is called from the accordion-group directive when to remove itself\n    this.removeGroup = function (group) {\n      var index = _.indexOf(this.groups, group);\n      if (index !== -1) {\n        this.groups.splice(index, 1);\n      }\n    };\n  }\n\n  availity.ui.controller('AvAccordionController', AvAccordionController);\n\n  function avAccordion(AV_ACCORDION){\n    return {\n      restrict: 'A',\n      controller: 'AvAccordionController',\n      transclude: true,\n      templateUrl: AV_ACCORDION.TEMPLATES.BASE\n    };\n  }\n\n  avAccordion.$inject = ['AV_ACCORDION'];\n  availity.ui.directive('avAccordion', avAccordion);\n\n  // The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n  function avAccordionGroup(AV_ACCORDION){\n    return {\n      restrict: 'A',\n      require: '^avAccordion',\n      transclude: true,\n      replace: true,\n      templateUrl: AV_ACCORDION.TEMPLATES.GROUP,\n      scope: {\n        heading: '@',               // Interpolate the heading attribute onto this scope\n        popOverContent: '@',        // Interpolate the heading attribute onto this scope\n        popOverContentHeader: '@',  // Interpolate the heading attribute onto this scope\n        isOpen: '=?',\n        initOpen: '=?',\n        isDisabled: '=?'\n      },\n      link: function (scope, element, attrs, accordionCtrl) {\n\n        accordionCtrl.addGroup(scope);\n        scope.openClass = attrs.openClass || 'panel-open';\n        scope.panelClass = attrs.panelClass || 'panel-default';\n        scope.$watch('initOpen', function (value) {\n          element.toggleClass(scope.openClass, !!value);\n          scope.isOpen = !!scope.initOpen;\n        });\n\n        scope.toggleOpen = function ($event) {\n          if (!scope.isDisabled) {\n            if (!$event || $event.which === 32) {\n              scope.isOpen = !scope.isOpen;\n            }\n          }\n        };\n\n        var id = 'accordion-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n        scope.headingId = id + '-tab';\n        scope.panelId = id + '-panel';\n      }\n    };\n  }\n\n  avAccordionGroup.$inject = ['AV_ACCORDION'];\n  availity.ui.directive('avAccordionGroup', avAccordionGroup);\n\n  function avCollapse($transition){\n\n    return {\n      link: function (scope, element, attrs) {\n\n        var initialAnimSkip = true;\n        var currentTransition;\n\n        function doTransition(change) {\n\n          var newTransition = $transition(element, change);\n\n          function newTransitionDone() {\n            // Make sure it's this transition, otherwise, leave it alone.\n            if (currentTransition === newTransition) {\n              currentTransition = undefined;\n            }\n          }\n\n          if (currentTransition) {\n            currentTransition.cancel();\n          }\n          currentTransition = newTransition;\n          newTransition.then(newTransitionDone, newTransitionDone);\n          return newTransition;\n\n\n        }\n\n        function expandDone() {\n          element.removeClass('collapsing');\n          element.addClass('collapse in');\n          element.css({height: 'auto'});\n        }\n\n        function expand() {\n          if (initialAnimSkip) {\n            initialAnimSkip = false;\n            expandDone();\n          } else {\n            element.removeClass('collapse').addClass('collapsing');\n            doTransition({height: element[0].scrollHeight + 'px'}).then(expandDone);\n          }\n        }\n\n        function collapseDone() {\n          element.removeClass('collapsing');\n          element.addClass('collapse');\n        }\n\n        function collapse() {\n          if (initialAnimSkip) {\n            initialAnimSkip = false;\n            collapseDone();\n            element.css({height: 0});\n          } else {\n            // CSS transitions don't work with height: auto, so we have to manually change the height to a specific value\n            element.css({height: element[0].scrollHeight + 'px'});\n            //trigger reflow so a browser realizes that height was updated from auto to a specific value\n            //var x = element[0].offsetWidth;\n\n            element.removeClass('collapse in').addClass('collapsing');\n\n            doTransition({height: 0}).then(collapseDone);\n          }\n        }\n\n        scope.$watch(attrs.avCollapse, function (shouldCollapse) {\n          if (shouldCollapse) {\n            collapse();\n          } else {\n            expand();\n          }\n        });\n      }\n    };\n  }\n\n  avCollapse.$inject = ['$transition'];\n  availity.ui.directive('avCollapse', avCollapse);\n\n  availity.ui.factory('$transition', [\n    '$q', '$timeout', '$rootScope',\n    function ($q, $timeout, $rootScope) {\n\n      var $transition = function (element, trigger, options) {\n        options = options || {};\n        var deferred = $q.defer();\n        var endEventName = $transition[options.animation ? 'animationEndEventName' : 'transitionEndEventName'];\n\n        var transitionEndHandler = function () {\n          $rootScope.$apply(function () {\n            element.unbind(endEventName, transitionEndHandler);\n            deferred.resolve(element);\n          });\n        };\n\n        if (endEventName) {\n          element.bind(endEventName, transitionEndHandler);\n        }\n\n        // Wrap in a timeout to allow the browser time to update the DOM before the transition is to occur\n        $timeout(function () {\n          if (angular.isString(trigger)) {\n            element.addClass(trigger);\n          } else if (angular.isFunction(trigger)) {\n            trigger(element);\n          } else if (angular.isObject(trigger)) {\n            element.css(trigger);\n          }\n          //If browser does not support transitions, instantly resolve\n          if (!endEventName) {\n            deferred.resolve(element);\n          }\n        });\n\n        // Add our custom cancel function to the promise that is returned\n        // We can call this if we are about to run a new transition, which we know will prevent this transition from ending,\n        // i.e. it will therefore never raise a transitionEnd event for that transition\n        deferred.promise.cancel = function () {\n          if (endEventName) {\n            element.unbind(endEventName, transitionEndHandler);\n          }\n          deferred.reject('Transition cancelled');\n        };\n\n        return deferred.promise;\n      };\n\n      // Work out the name of the transitionEnd event\n      var transElement = document.createElement('trans');\n      var transitionEndEventNames = {\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'oTransitionEnd',\n        'transition': 'transitionend'\n      };\n      var animationEndEventNames = {\n        'WebkitTransition': 'webkitAnimationEnd',\n        'MozTransition': 'animationend',\n        'OTransition': 'oAnimationEnd',\n        'transition': 'animationend'\n      };\n\n      var styleEvent =  ['WebkitTransition', 'MozTransition', 'OTransition', 'transition'];\n\n      function findEndEventName(endEventNames) {\n        for (var nameIndex = 0;nameIndex < styleEvent.length; nameIndex++) {\n          var name = styleEvent[nameIndex];\n          if (transElement.style[name] !== undefined) {\n            return endEventNames[name];\n          }\n        }\n      }\n\n      $transition.transitionEndEventName = findEndEventName(transitionEndEventNames);\n      $transition.animationEndEventName = findEndEventName(animationEndEventNames);\n      return $transition;\n    }]);\n\n})(window);\n","(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_BADGE', {\n    COLOR: null,\n    DEFAULT_CLASS: 'badge',\n    SHOW_WHEN_ZERO: false,\n    TEMPLATE: 'ui/badge/badge-tpl.html'\n  });\n\n  function badgeDirective(AV_BADGE) {\n\n    return {\n      scope: {\n        color: '@',\n        count: '=avBadge',\n        showWhenZero: '@'\n      },\n      templateUrl: AV_BADGE.TEMPLATE,\n      link: function(scope, element) {\n        scope.color = scope.color || AV_BADGE.COLOR;\n        scope.showWhenZero = scope.showWhenZero || AV_BADGE.SHOW_WHEN_ZERO;\n\n        var classes = [];\n        classes.push(AV_BADGE.DEFAULT_CLASS);\n        if(scope.color) {\n          classes.push(scope.color);\n        }\n\n        element.addClass(classes.join(' '));\n      }\n    };\n  }\n\n  badgeDirective.$inject = ['AV_BADGE'];\n  availity.ui.directive('avBadge', badgeDirective);\n\n})(window);\n","(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_REMOVABLE_LABEL', {\n    TEMPLATE: 'ui/labels/removable-label-tpl.html'\n  });\n\n  availity.ui.directive('avRemovableLabel', function(AV_REMOVABLE_LABEL) {\n    return {\n      templateUrl: AV_REMOVABLE_LABEL.TEMPLATE,\n      transclude: true,\n      scope: {\n        removeValue: '=',\n        onRemove: '&'\n      },\n      link: function(scope, element, attrs) {\n        element.addClass('label-remove');\n        scope.removeLabel = function() {\n          if(!attrs.disabled) {\n            scope.onRemove()(scope.removeValue);\n          }\n        };\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_LOADER', {\n\n    TEMPLATES: {\n      LOADER: 'ui/animation/loader-tpl.html'\n    }\n\n  });\n\n  availity.ui.controller('AvLoaderController', function($element) {\n\n    var self = this;\n    var active;\n\n    this.start = function() {\n      active = true;\n      this.animate();\n    };\n\n    this.animate = function() {\n\n      $element\n        .find('.loading-bullet')\n        .velocity('transition.slideRightIn', { stagger: 250 })\n        .velocity({ opacity: 0 }, {\n          delay: 750,\n          duration: 500,\n          complete: function() {\n            if(active) {\n              setTimeout(function() {self.animate();}, 500);\n            } else {\n              self.endAnimation();\n            }\n          }\n        });\n\n    };\n\n    this.endAnimation = function() {\n      $element.find('.loading-bullet').velocity('stop', true);\n      $element.removeData();\n    };\n\n    this.stop = function() {\n      active = false;\n    };\n\n  });\n\n  availity.ui.directive('avLoader', function(AV_LOADER) {\n    return {\n      restrict: 'A',\n      replace: true,\n      controller: 'AvLoaderController',\n      require: 'avLoader',\n      templateUrl: AV_LOADER.TEMPLATES.LOADER,\n      link: function(scope, element, attr, avLoader) {\n\n        if(!attr.delay) {\n          avLoader.start();\n        }\n\n        scope.$on('$destroy', function() {\n          avLoader.stop();\n        });\n\n      }\n    };\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_BLOCK', {\n    TEMPLATES: {\n      BLOCK: 'ui/block/block-tpl.html'\n    }\n  });\n\n  var getLoaderController = function(blockId) {\n    var el = $('[data-block-ui=\"' + blockId + '\"]') || $('[block-ui=\"' + blockId + '\"]');\n    if(el) {\n      return el.find('[data-av-loader]').controller('avLoader');\n    }\n  };\n\n  var triggerLoaderController = function(id, instance, fn) {\n\n    var controller = instance.loaderController;\n    if(!controller) {\n      controller = getLoaderController(id);\n      instance.loaderController = controller;\n    }\n    if(controller && _.isFunction(controller[fn])) {\n      controller[fn]();\n    }\n\n  };\n\n  var triggerInstance = function(id, instance, origFn, loaderFn) {\n    triggerLoaderController(id, instance, loaderFn);\n    origFn.apply(instance);\n  };\n\n  var modifyBlockInstances = function(id, instance) {\n\n    var origStartFn = instance.start;\n    var origStopFn = instance.stop;\n\n    instance.start = function() {\n      triggerInstance(id, instance, origStartFn, 'start');\n    };\n\n    instance.stop = function() {\n      triggerInstance(id, instance, origStopFn, 'stop');\n    };\n\n    instance.startLoader = function() {\n      triggerLoaderController(id, instance, 'start');\n    };\n\n    instance.avModifications = true;\n  };\n\n  availity.ui.run(function($injector, $log, AV_BLOCK) {\n\n    try {\n\n      var blockUIConfig = $injector.get('blockUIConfig');\n      var blockUI = $injector.get('blockUI');\n      blockUIConfig.autoBlock = false;\n      blockUIConfig.delay = 0;\n      blockUIConfig.templateUrl = AV_BLOCK.TEMPLATES.BLOCK;\n\n      var origGetFn = blockUI.instances.get;\n      blockUI.instances.get = function(id) {\n        var instance = origGetFn(id);\n        if(!instance.avModifications) {\n          modifyBlockInstances(id, instance);\n        }\n        return instance;\n      };\n\n    } catch(e) {\n      $log.warn('blockUI is required to use av block.');\n    }\n  });\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  // Helper directive that hooks into block-ui's start-up lifecycle and starts the loader\n  availity.ui.directive('avBlockUi', function(blockUI) {\n\n    return {\n      restrict: 'A',\n      link: function($scope, $element, $attrs) {\n\n        var blockId = $attrs.avBlockUi;\n        var blockCount = $attrs.blockCount;\n        var instance = blockUI.instances.get(blockId);\n        if(blockCount > 0) {\n          instance.startLoader();\n        }\n      }\n    };\n\n  });\n\n})(window);\n","/*\n* Inspired by https://github.com/angular-ui/bootstrap/blob/master/src/tabs/tabs.js\n*/\n(function(root) {\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_TABS', {\n    TEMPLATES: {\n      TABS: 'ui/tabs/tabs-tpl.html',\n      TAB: 'ui/tabs/tab-tpl.html'\n    }\n  });\n\n  function TabsController($scope) {\n\n    var self = this;\n\n    $scope.tabs = [];\n    self.tabs = $scope.tabs;\n\n    this.addTab = function(tab) {\n      self.tabs.push(tab);\n\n      if(self.tabs.length === 1) {\n        tab.active = true;\n      } else if(tab.active) {\n        self.selectTab(tab);\n      } else {\n        tab.active = false;\n      }\n    };\n\n    this.removeTab = function(tab) {\n      var index = self.tabs.indexOf(tab);\n\n      if(tab.active && self.tabs.length > 1) {\n        //If this is the last tab, select the previous tab. else, the next tab.\n        var newActiveIndex = index === self.tabs.length - 1 ? index - 1 : index + 1;\n        self.selectTab(self.tabs[newActiveIndex]);\n      }\n\n      self.tabs.splice(index, 1);\n    };\n\n    this.selectTab = function(selectedTab) {\n      angular.forEach(self.tabs, function (tab) {\n        if(tab.active && tab !== selectedTab) {\n          tab.active = false;\n          tab.onDeselect();\n        }\n      });\n\n      selectedTab.active = true;\n      selectedTab.onSelect();\n    };\n  }\n\n  TabsController.$inject = ['$scope'];\n  availity.ui.controller('AvTabsController', TabsController);\n\n  function TabsDirective(AV_TABS) {\n    return {\n      restrict: 'AE',\n      templateUrl: AV_TABS.TEMPLATES.TABS,\n      transclude: true,\n      replace: true,\n      controller: 'AvTabsController',\n      scope: true,\n      link: function(scope, element, attrs) {\n        scope.justified = !!attrs.justified;\n        scope.tabType = attrs.tabType;\n        scope.vertical = !!attrs.vertical;\n\n        if(angular.isUndefined(attrs.padContent)) {\n          scope.padContent = true;\n        }\n      }\n    };\n  }\n\n  TabsDirective.$inject = ['AV_TABS'];\n  availity.ui.directive('avTabs', TabsDirective);\n\n  function TabDirective(AV_TABS) {\n    return {\n      restrict: 'AE',\n      templateUrl: AV_TABS.TEMPLATES.TAB,\n      replace: true,\n      require: '^avTabs',\n      transclude: true,\n      scope: {\n        heading: '@',\n        template: '=',\n        templateUrl: '=',\n        onSelect: '&select',\n        onDeselect: '&deselect'\n      },\n      controller: function() {\n        // Allow avTabs to be required by other directives\n      },\n      link: function(scope, element, attrs, tabsController, transclude) {\n        scope.transcludeFn = transclude;\n\n        tabsController.addTab(scope);\n\n        scope.$on('destroy', function() {\n          tabsController.removeTab(scope);\n        });\n\n        scope.select = function() {\n          if(!scope.disabled) {\n            tabsController.selectTab(scope);\n          }\n        };\n\n        scope.$watch('active', function(active) {\n          if(active) {\n            tabsController.selectTab(scope);\n          }\n        });\n\n        if(angular.isDefined(attrs.active)) {\n          scope.active = attrs.active;\n\n          scope.$parent.$watch(attrs.active, function(active) {\n            if(active) {\n              tabsController.selectTab(scope);\n            }\n          });\n        }\n\n        if(angular.isDefined(attrs.disable)) {\n          scope.$parent.$watch(attrs.disable, function(disabled) {\n            scope.disabled = !!disabled;\n          });\n        }\n      }\n    };\n  }\n\n  TabDirective.$inject = ['AV_TABS'];\n  availity.ui.directive('avTab', TabDirective);\n\n  function TabPaneDirective(avTemplateCache, $compile) {\n    return {\n      restrict: 'AE',\n      require: '^avTabs',\n      link: function(scope, element, attrs) {\n\n        var tab = scope.$eval(attrs.avTabPane);\n\n        if(angular.isDefined(tab.template) || angular.isDefined(tab.templateUrl)) {\n          avTemplateCache.get(tab)\n          .then(function(template) {\n            element.append($compile(template)(scope));\n          });\n        } else {\n          tab.transcludeFn(tab.$parent, function(contents) {\n            angular.forEach(contents, function(node) {\n              element.append(node);\n            });\n          });\n        }\n      }\n    };\n  }\n\n  TabPaneDirective.$inject = ['avTemplateCache', '$compile'];\n  availity.ui.directive('avTabPane', TabPaneDirective);\n\n})(window);\n","(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.constant('AV_SCROLL_PAGINATION', {\n    TEMPLATE: 'ui/scroll-pagination/scroll-pagination-tpl.html',\n    DEFAULT_OPTIONS: {\n      limit: 50,\n      offset: 0,\n      maxCached: 100,\n      loadMoreText: 'Load more items',\n      entryIdAttribute: 'id',\n      apiParams: {},\n      beforePageLoad: undefined,\n      afterPageLoad: undefined\n    }\n  });\n\n\n  availity.ui.factory('avScrollPaginationService', function($log) {\n    function AvScrollPaginationService() {\n      this.instances = {};\n    }\n\n    var proto = AvScrollPaginationService.prototype;\n\n    proto.registerInstance = function(instanceInterface, id) {\n      if (this.instances[id]) {\n        $log.warn('Found existing instance with id ' + id);\n      }\n      this.instances[id] = instanceInterface;\n    };\n\n    proto.unregisterInstance = function(id) {\n      delete this.instances[id];\n    };\n\n    proto.resetInstance = function(id) {\n      if (this.instances[id]) {\n        this.instances[id].reset();\n        return true;\n      }\n      return false;\n    };\n\n    return new AvScrollPaginationService();\n  });\n\n  availity.ui.controller('AvScrollPaginationController', function($scope, $element, $timeout, $log, AV_SCROLL_PAGINATION, blockUI, avScrollPaginationService) {\n\n    var self = this;\n\n    this.buildOptions = function() {\n      $scope._options = {};\n      _.extend($scope._options, AV_SCROLL_PAGINATION.DEFAULT_OPTIONS, $scope.options || {});\n      $scope._options.lowOffset = $scope._options.offset;\n      $scope._options.highOffset = $scope._options.offset;\n    };\n\n    var originalEntries = angular.copy($scope.entries);\n    this.buildOptions();\n\n    this.updateButtonVisibilityFlags = function(data) {\n      $scope.showNext = $scope._options.highOffset + data.count < data.totalCount;\n      $scope.showPrev = $scope._options.lowOffset > 0;\n    };\n\n    this.disableVisibilityFlags = function() {\n      $scope.showNext = false;\n      $scope.showPrev = false;\n    };\n\n    this.loadEntries = function(prepend) {\n      var block = blockUI.instances.get('scroll-pagination-block-' + $scope.avScrollPagination);\n      self.disableVisibilityFlags();\n      block.start();\n      if (_.isFunction($scope._options.beforePageLoad)) {\n        $scope._options.beforePageLoad($scope._options);\n      }\n      var params = {};\n      _.extend(params, $scope._options.apiParams, {limit: $scope._options.limit, offset: $scope._options.offset});\n      $scope.apiResource.query({params: params}).then(function(response) {\n        var responseData = self.getResponseData(response);\n        if ($scope._options.afterPageLoad) {\n          $scope._options.afterPageLoad(responseData);\n        }\n        if (responseData && responseData[$scope._options.resourceId]) {\n          self.addEntries(responseData[$scope._options.resourceId], prepend);\n        }\n        self.updateButtonVisibilityFlags(responseData);\n        block.stop();\n      }, function() {\n        $log.error('API call failed');\n        block.stop();\n      });\n    };\n\n    this.getResponseData = function(data) {\n      if (data) {\n        if ($scope._options.responseKey) {\n          var keys = $scope._options.responseKey.split('.');\n          var nestedData = data;\n          var noData = false;\n          _.each(keys, function(key) {\n            if (!noData) {\n              nestedData = nestedData[key];\n              if (!nestedData) {\n                noData = true;\n              }\n            }\n          });\n          return noData ? [] : nestedData;\n        } else {\n          return data;\n        }\n      }\n      return [];\n    };\n\n    this.addEntries = function(entries, prepend) {\n      var oldEntries = angular.copy($scope.entries);\n      if (prepend) {\n        $scope.entries.unshift.apply($scope.entries, entries);\n      } else {\n        $scope.entries.push.apply($scope.entries, entries);\n      }\n      if ($scope.entries.length > $scope._options.maxCached) {\n        var diff = $scope.entries.length - $scope._options.maxCached;\n        var trackedElementId;\n        if (prepend) {\n          $scope.entries = $scope.entries.slice(0, $scope._options.maxCached);\n          $scope._options.highOffset -= diff;\n          trackedElementId = oldEntries[oldEntries.length-diff-1] ? oldEntries[oldEntries.length-diff-1][$scope._options.entryIdAttribute] : undefined;\n        } else {\n          $scope.entries = $scope.entries.slice(diff, $scope.entries.length);\n          $scope._options.lowOffset += diff;\n          trackedElementId = oldEntries[diff] ? oldEntries[diff][$scope._options.entryIdAttribute] : undefined;\n        }\n        self.autoscroll(trackedElementId, prepend);\n      }\n    };\n\n    this.autoscroll = function(trackedElementId, prepend) {\n      if (trackedElementId) {\n        var trackedElement = $element.find('#'+trackedElementId);\n        var trackedElementTop = trackedElement.offset().top;\n        $timeout(function() {\n          var newScrollTop = $element.scrollTop() + trackedElement.offset().top - trackedElementTop;\n          $element.animate({scrollTop: newScrollTop}, 0);\n        }, 0, false);\n      } else {\n        $timeout(function() {\n          if (prepend) {\n            $element.animate({scrollTop: $element.prop('scrollHeight')}, 0);\n          } else {\n            $element.animate({scrollTop: 0}, 0);\n          }\n        }, 0, false);\n      }\n    };\n\n    this.loadPrev = function() {\n      $scope._options.lowOffset -= $scope._options.limit;\n      $scope._options.offset = $scope._options.lowOffset;\n      self.loadEntries(true);\n    };\n\n    this.loadNext = function() {\n      $scope._options.highOffset += $scope._options.limit;\n      $scope._options.offset = $scope._options.highOffset;\n      self.loadEntries();\n    };\n\n    avScrollPaginationService.registerInstance({\n      reset: function() {\n        $element.animate({scrollTop: 0}, 0);\n        $scope.entries = angular.copy(originalEntries);\n        self.buildOptions();\n        self.loadEntries();\n      }},\n      $scope.avScrollPagination\n    );\n\n    $scope.$on('$destroy', function() {\n      avScrollPaginationService.unregisterInstance($scope.avScrollPagination);\n    });\n\n    $scope.loadPrev = self.loadPrev;\n    $scope.loadNext = self.loadNext;\n\n    this.loadEntries();\n  });\n\n\n\n  availity.ui.directive('avScrollPagination', function($log, AV_SCROLL_PAGINATION) {\n    return {\n      restrict: 'A',\n      controller: 'AvScrollPaginationController',\n      transclude: true,\n      templateUrl: AV_SCROLL_PAGINATION.TEMPLATE,\n      scope: {\n        apiResource: '=',\n        entries: '=',\n        options: '=',\n        avScrollPagination: '@'\n      },\n      link: function($scope) {\n        if (!$scope.avScrollPagination) {\n          $log.error('Directive must include an id');\n        }\n      }\n    };\n  });\n\n})(window);\n","// Original => http://bootsnipp.com/snippets/78VV\n(function(root) {\n\n  'use strict';\n\n  var availity = root.availity;\n\n  availity.ui.provider('avDimmerConfig', function() {\n\n    var config = {\n      animationConfig: {\n        duration: 250\n      },\n      showAnimation: 'fadeIn',\n      showEvent: 'mouseenter',\n      hideAnimation: 'fadeOut',\n      hideEvent: 'mouseleave',\n      overlaySelector: '.dimmer-content'\n    };\n\n    this.set = function(options) {\n      angular.extend(config, options);\n    };\n\n    this.$get = function() {\n      return angular.copy(config);\n    };\n\n  });\n\n  availity.ui.directive('avDimmer', function(avDimmerConfig) {\n    return {\n      link: function(scope,  elm, attrs) {\n        var config = angular.extend({}, avDimmerConfig, attrs.config);\n\n        elm.on(config.showEvent, function() {\n          elm.find(config.overlaySelector).velocity(config.showAnimation, config.animationConfig);\n        }).on(config.hideEvent, function() {\n          elm.find(config.overlaySelector).velocity(config.hideAnimation, config.animationConfig);\n        });\n\n        scope.$on('$destroy', function() {\n          elm.off();\n        });\n      }\n    };\n  });\n\n})(window);\n"],"sourceRoot":"/source/"}